/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const SuccessLazyImport = createFileRoute('/success')()
const PaymentLazyImport = createFileRoute('/payment')()
const IndexLazyImport = createFileRoute('/')()
const SeatIndexLazyImport = createFileRoute('/seat/')()
const NotificationIndexLazyImport = createFileRoute('/notification/')()
const AuthVerifyOtpIndexLazyImport = createFileRoute('/auth/verify-otp/')()
const AuthSendOtpIndexLazyImport = createFileRoute('/auth/send-otp/')()
const AuthResetPasswordIndexLazyImport = createFileRoute(
  '/auth/reset-password/',
)()
const AuthRegisterIndexLazyImport = createFileRoute('/auth/register/')()
const AuthProfileIndexLazyImport = createFileRoute('/auth/profile/')()
const AuthLoginIndexLazyImport = createFileRoute('/auth/login/')()

// Create/Update Routes

const SuccessLazyRoute = SuccessLazyImport.update({
  id: '/success',
  path: '/success',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/success.lazy').then((d) => d.Route))

const PaymentLazyRoute = PaymentLazyImport.update({
  id: '/payment',
  path: '/payment',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/payment.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const SeatIndexLazyRoute = SeatIndexLazyImport.update({
  id: '/seat/',
  path: '/seat/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/seat/index.lazy').then((d) => d.Route))

const NotificationIndexLazyRoute = NotificationIndexLazyImport.update({
  id: '/notification/',
  path: '/notification/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/notification/index.lazy').then((d) => d.Route),
)

const AuthVerifyOtpIndexLazyRoute = AuthVerifyOtpIndexLazyImport.update({
  id: '/auth/verify-otp/',
  path: '/auth/verify-otp/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/auth/verify-otp/index.lazy').then((d) => d.Route),
)

const AuthSendOtpIndexLazyRoute = AuthSendOtpIndexLazyImport.update({
  id: '/auth/send-otp/',
  path: '/auth/send-otp/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/auth/send-otp/index.lazy').then((d) => d.Route),
)

const AuthResetPasswordIndexLazyRoute = AuthResetPasswordIndexLazyImport.update(
  {
    id: '/auth/reset-password/',
    path: '/auth/reset-password/',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/auth/reset-password/index.lazy').then((d) => d.Route),
)

const AuthRegisterIndexLazyRoute = AuthRegisterIndexLazyImport.update({
  id: '/auth/register/',
  path: '/auth/register/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/auth/register/index.lazy').then((d) => d.Route),
)

const AuthProfileIndexLazyRoute = AuthProfileIndexLazyImport.update({
  id: '/auth/profile/',
  path: '/auth/profile/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/auth/profile/index.lazy').then((d) => d.Route),
)

const AuthLoginIndexLazyRoute = AuthLoginIndexLazyImport.update({
  id: '/auth/login/',
  path: '/auth/login/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/auth/login/index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/payment': {
      id: '/payment'
      path: '/payment'
      fullPath: '/payment'
      preLoaderRoute: typeof PaymentLazyImport
      parentRoute: typeof rootRoute
    }
    '/success': {
      id: '/success'
      path: '/success'
      fullPath: '/success'
      preLoaderRoute: typeof SuccessLazyImport
      parentRoute: typeof rootRoute
    }
    '/notification/': {
      id: '/notification/'
      path: '/notification'
      fullPath: '/notification'
      preLoaderRoute: typeof NotificationIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/seat/': {
      id: '/seat/'
      path: '/seat'
      fullPath: '/seat'
      preLoaderRoute: typeof SeatIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/profile/': {
      id: '/auth/profile/'
      path: '/auth/profile'
      fullPath: '/auth/profile'
      preLoaderRoute: typeof AuthProfileIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/register/': {
      id: '/auth/register/'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/reset-password/': {
      id: '/auth/reset-password/'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/send-otp/': {
      id: '/auth/send-otp/'
      path: '/auth/send-otp'
      fullPath: '/auth/send-otp'
      preLoaderRoute: typeof AuthSendOtpIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/verify-otp/': {
      id: '/auth/verify-otp/'
      path: '/auth/verify-otp'
      fullPath: '/auth/verify-otp'
      preLoaderRoute: typeof AuthVerifyOtpIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/payment': typeof PaymentLazyRoute
  '/success': typeof SuccessLazyRoute
  '/notification': typeof NotificationIndexLazyRoute
  '/seat': typeof SeatIndexLazyRoute
  '/auth/login': typeof AuthLoginIndexLazyRoute
  '/auth/profile': typeof AuthProfileIndexLazyRoute
  '/auth/register': typeof AuthRegisterIndexLazyRoute
  '/auth/reset-password': typeof AuthResetPasswordIndexLazyRoute
  '/auth/send-otp': typeof AuthSendOtpIndexLazyRoute
  '/auth/verify-otp': typeof AuthVerifyOtpIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/payment': typeof PaymentLazyRoute
  '/success': typeof SuccessLazyRoute
  '/notification': typeof NotificationIndexLazyRoute
  '/seat': typeof SeatIndexLazyRoute
  '/auth/login': typeof AuthLoginIndexLazyRoute
  '/auth/profile': typeof AuthProfileIndexLazyRoute
  '/auth/register': typeof AuthRegisterIndexLazyRoute
  '/auth/reset-password': typeof AuthResetPasswordIndexLazyRoute
  '/auth/send-otp': typeof AuthSendOtpIndexLazyRoute
  '/auth/verify-otp': typeof AuthVerifyOtpIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/payment': typeof PaymentLazyRoute
  '/success': typeof SuccessLazyRoute
  '/notification/': typeof NotificationIndexLazyRoute
  '/seat/': typeof SeatIndexLazyRoute
  '/auth/login/': typeof AuthLoginIndexLazyRoute
  '/auth/profile/': typeof AuthProfileIndexLazyRoute
  '/auth/register/': typeof AuthRegisterIndexLazyRoute
  '/auth/reset-password/': typeof AuthResetPasswordIndexLazyRoute
  '/auth/send-otp/': typeof AuthSendOtpIndexLazyRoute
  '/auth/verify-otp/': typeof AuthVerifyOtpIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/payment'
    | '/success'
    | '/notification'
    | '/seat'
    | '/auth/login'
    | '/auth/profile'
    | '/auth/register'
    | '/auth/reset-password'
    | '/auth/send-otp'
    | '/auth/verify-otp'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/payment'
    | '/success'
    | '/notification'
    | '/seat'
    | '/auth/login'
    | '/auth/profile'
    | '/auth/register'
    | '/auth/reset-password'
    | '/auth/send-otp'
    | '/auth/verify-otp'
  id:
    | '__root__'
    | '/'
    | '/payment'
    | '/success'
    | '/notification/'
    | '/seat/'
    | '/auth/login/'
    | '/auth/profile/'
    | '/auth/register/'
    | '/auth/reset-password/'
    | '/auth/send-otp/'
    | '/auth/verify-otp/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  PaymentLazyRoute: typeof PaymentLazyRoute
  SuccessLazyRoute: typeof SuccessLazyRoute
  NotificationIndexLazyRoute: typeof NotificationIndexLazyRoute
  SeatIndexLazyRoute: typeof SeatIndexLazyRoute
  AuthLoginIndexLazyRoute: typeof AuthLoginIndexLazyRoute
  AuthProfileIndexLazyRoute: typeof AuthProfileIndexLazyRoute
  AuthRegisterIndexLazyRoute: typeof AuthRegisterIndexLazyRoute
  AuthResetPasswordIndexLazyRoute: typeof AuthResetPasswordIndexLazyRoute
  AuthSendOtpIndexLazyRoute: typeof AuthSendOtpIndexLazyRoute
  AuthVerifyOtpIndexLazyRoute: typeof AuthVerifyOtpIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  PaymentLazyRoute: PaymentLazyRoute,
  SuccessLazyRoute: SuccessLazyRoute,
  NotificationIndexLazyRoute: NotificationIndexLazyRoute,
  SeatIndexLazyRoute: SeatIndexLazyRoute,
  AuthLoginIndexLazyRoute: AuthLoginIndexLazyRoute,
  AuthProfileIndexLazyRoute: AuthProfileIndexLazyRoute,
  AuthRegisterIndexLazyRoute: AuthRegisterIndexLazyRoute,
  AuthResetPasswordIndexLazyRoute: AuthResetPasswordIndexLazyRoute,
  AuthSendOtpIndexLazyRoute: AuthSendOtpIndexLazyRoute,
  AuthVerifyOtpIndexLazyRoute: AuthVerifyOtpIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/payment",
        "/success",
        "/notification/",
        "/seat/",
        "/auth/login/",
        "/auth/profile/",
        "/auth/register/",
        "/auth/reset-password/",
        "/auth/send-otp/",
        "/auth/verify-otp/"
      ]
    },
    "/": {
      "filePath": "index.lazy.jsx"
    },
    "/payment": {
      "filePath": "payment.lazy.jsx"
    },
    "/success": {
      "filePath": "success.lazy.jsx"
    },
    "/notification/": {
      "filePath": "notification/index.lazy.jsx"
    },
    "/seat/": {
      "filePath": "seat/index.lazy.jsx"
    },
    "/auth/login/": {
      "filePath": "auth/login/index.lazy.jsx"
    },
    "/auth/profile/": {
      "filePath": "auth/profile/index.lazy.jsx"
    },
    "/auth/register/": {
      "filePath": "auth/register/index.lazy.jsx"
    },
    "/auth/reset-password/": {
      "filePath": "auth/reset-password/index.lazy.jsx"
    },
    "/auth/send-otp/": {
      "filePath": "auth/send-otp/index.lazy.jsx"
    },
    "/auth/verify-otp/": {
      "filePath": "auth/verify-otp/index.lazy.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
